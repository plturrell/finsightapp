name: FinSight CI/CD Pipeline

on:
  push:
    branches: [ main, development ]
  pull_request:
    branches: [ main, development ]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Lint
      run: npm run lint || echo "Linting issues found"
    
    - name: Type check
      run: npx tsc --noEmit
    
    - name: Run tests
      run: npm test || echo "Tests failed"

  build:
    name: Build
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/development')
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./Dockerfile.prod
        push: true
        tags: |
          ghcr.io/${{ github.repository_owner }}/finsight-app:${{ github.ref_name }}
          ghcr.io/${{ github.repository_owner }}/finsight-app:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  deploy-dev:
    name: Deploy to Development
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/development'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up kubectl
      uses: azure/setup-kubectl@v3
    
    - name: Set up kubeconfig
      run: |
        mkdir -p $HOME/.kube
        echo "${{ secrets.KUBE_CONFIG }}" > $HOME/.kube/config
        chmod 600 $HOME/.kube/config
    
    - name: Update deployment image
      run: |
        # Replace the image in the Kubernetes deployment file
        sed -i "s|\${DOCKER_REGISTRY}/finsight-app:prod|ghcr.io/${{ github.repository_owner }}/finsight-app:${{ github.sha }}|g" kubernetes/deployment.yaml
        
        # Apply the deployment
        kubectl apply -f kubernetes/deployment.yaml --namespace development
        
        # Wait for deployment to be ready
        kubectl rollout status deployment/finsight-app --namespace development --timeout=120s

  deploy-prod:
    name: Deploy to Production
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    environment: production
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up kubectl
      uses: azure/setup-kubectl@v3
    
    - name: Set up kubeconfig
      run: |
        mkdir -p $HOME/.kube
        echo "${{ secrets.KUBE_CONFIG }}" > $HOME/.kube/config
        chmod 600 $HOME/.kube/config
    
    - name: Update deployment image
      run: |
        # Replace the image in the Kubernetes deployment file
        sed -i "s|\${DOCKER_REGISTRY}/finsight-app:prod|ghcr.io/${{ github.repository_owner }}/finsight-app:${{ github.sha }}|g" kubernetes/deployment.yaml
        
        # Apply the deployment
        kubectl apply -f kubernetes/deployment.yaml --namespace production
        
        # Wait for deployment to be ready
        kubectl rollout status deployment/finsight-app --namespace production --timeout=120s